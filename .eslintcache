[{"D:\\mobx\\react-clone\\redux_test\\src\\index.js":"1","D:\\mobx\\react-clone\\redux_test\\src\\App.js":"2","D:\\mobx\\react-clone\\redux_test\\src\\store.js":"3","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\movieSearchForm.js":"4","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\MovieSearchForm.js":"5","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\MovieContainer.js":"6","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\MovieCard.js":"7","D:\\mobx\\react-clone\\redux_test\\src\\movieRedux\\movieReducer\\searchReducer.js":"8","D:\\mobx\\react-clone\\redux_test\\src\\movieRedux\\movieAction\\type.js":"9","D:\\mobx\\react-clone\\redux_test\\src\\movieRedux\\movieAction\\searchAction.js":"10","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\layout\\Spinner.js":"11"},{"size":200,"mtime":1610444987646,"results":"12","hashOfConfig":"13"},{"size":553,"mtime":1610522070409,"results":"14","hashOfConfig":"13"},{"size":498,"mtime":1610537467734,"results":"15","hashOfConfig":"13"},{"size":670,"mtime":1610450940814,"results":"16","hashOfConfig":"13"},{"size":2247,"mtime":1610534927508,"results":"17","hashOfConfig":"13"},{"size":2047,"mtime":1610535863046,"results":"18","hashOfConfig":"13"},{"size":573,"mtime":1610517183546,"results":"19","hashOfConfig":"13"},{"size":1347,"mtime":1610533756040,"results":"20","hashOfConfig":"13"},{"size":172,"mtime":1610532846194,"results":"21","hashOfConfig":"13"},{"size":1249,"mtime":1610535455380,"results":"22","hashOfConfig":"13"},{"size":342,"mtime":1610528943080,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cz6qx7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\mobx\\react-clone\\redux_test\\src\\index.js",[],["52","53"],"D:\\mobx\\react-clone\\redux_test\\src\\App.js",[],"D:\\mobx\\react-clone\\redux_test\\src\\store.js",[],"D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\movieSearchForm.js",[],"D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\MovieSearchForm.js",["54"],"import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { searchMovie, featchMovie, searchedMovie } from \"../movieRedux/movieAction/searchAction\";\r\n\r\nclass MovieSearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    localStorage.setItem(\"history\", JSON.stringify(this.props.text));\r\n\r\n  }\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n\r\n\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"history\")) {\r\n      if (this.state.history.indexOf(this.props.text) == -1) {\r\n        this.state.history.unshift(this.props.text);\r\n        if (this.state.history.length > 5) {\r\n          this.state.history.pop();\r\n        }\r\n        localStorage[\"history\"] = JSON.stringify(this.state.history)\r\n      }\r\n\r\n    }\r\n    this.props.searchedMovie(this.props.text);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-5 mb-3\">\r\n            <i className=\"fa fa-search\" /> Search for a movie ,TV series ..\r\n            </h1>\r\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              placeholder=\"Search Movies, TV Series ...\"\r\n              onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n              Search\r\n            </button>\r\n\r\n          </form>\r\n          <div>\r\n            {\r\n              this.state.history ? this.state.history.map((item, index) => {\r\n                return (\r\n                  <ul key={index}>\r\n                    <li>{item}</li>\r\n                  </ul>\r\n                )\r\n              }) : 'no history'\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    text: state.movie.text,\r\n    movies: state.movie.movies\r\n\r\n  }\r\n};\r\nexport default connect(mapStateToProps, { searchMovie, featchMovie, searchedMovie })(MovieSearchForm);","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\MovieContainer.js",["55","56"],"import React, { Component } from 'react';\r\nimport MovieCard from './MovieCard';\r\nimport { connect } from \"react-redux\";\r\nimport { featchMovie, setLoading } from \"../movieRedux/movieAction/searchAction\";\r\nimport Spinner from './layout/Spinner';\r\n\r\nclass MovieContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.featchMovie();\r\n        this.props.setLoading();\r\n    }\r\n    render() {\r\n        const { movies, searchedMovie } = this.props;\r\n        console.log(movies);\r\n\r\n        const movieList = movies && movies.filter((data) => {\r\n            if (this.props.text == null)\r\n                return data\r\n\r\n            else if (data.title.toLowerCase().includes(this.props.text.toLowerCase()) || data.series.name.toLowerCase().includes(this.props.text.toLowerCase())) {\r\n                return data\r\n            }\r\n        }).map(movie => {\r\n            console.log(\"jgfjsdghjfshjjksjdklfjmudofjsl\", movie.characters);\r\n            return (\r\n                <div className=\"col-md-3 mb-4\" key={movie.title} >\r\n                    <MovieCard movie={movie} />\r\n                </div>\r\n            );\r\n\r\n        });\r\n        \r\n\r\n        let content = this.props.loading ? <Spinner /> : movieList;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n            \r\n                {/* {content} */}\r\n                {\r\n                    searchedMovie && searchedMovie.map((movie) => {\r\n                        return (\r\n                            <div className=\"col-md-3 mb-4\" key={movie.title} >\r\n                                <MovieCard movie={movie} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        text: state.movie.text,\r\n        movies: state.movie.movies,\r\n        loading: state.movie.loading,\r\n        searchedMovie: state.movie.searchedMovie\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { featchMovie, setLoading })(MovieContainer);\r\n\r\n","D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\MovieCard.js",["57"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n\r\n\r\n    <div className=\"card card-body bg-dark text-center h-100\">\r\n      <img src={`${movie.thumbnail.path}.${movie.thumbnail.extension}`} className=\"w-100 mb-2\" alt=\"Movie Cover\" />\r\n      <h5 className=\"text-light card-title\">\r\n        {movie.title}\r\n      </h5>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MovieCard;\r\n\r\n//src={movie.Poster}\r\n// {movie.Title} - {movie.Year}\r\n//to={'/movie/' + movie.imdbID}","D:\\mobx\\react-clone\\redux_test\\src\\movieRedux\\movieReducer\\searchReducer.js",["58"],"\r\nimport { SEARCH_MOVIE, FETCH_MOVIES, LOADING, SEARCHED_MOVIE } from \"../movieAction/type\";\r\n\r\nconst initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    searchedMovie: []\r\n\r\n};\r\n\r\nfunction searchReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return {\r\n                ...state, text: action.payload, loading: false\r\n            };\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case SEARCHED_MOVIE:\r\n            let text = action.payload;\r\n            const searchData = state.movies.filter((data) => {\r\n                if (text == null)\r\n                    return data\r\n\r\n                else if (data.title.toLowerCase().includes(text.toLowerCase()) || data.series.name.toLowerCase().includes(text.toLowerCase())) {\r\n                    return data\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                searchedMovie: searchData,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default searchReducer;","D:\\mobx\\react-clone\\redux_test\\src\\movieRedux\\movieAction\\type.js",[],["59","60"],"D:\\mobx\\react-clone\\redux_test\\src\\movieRedux\\movieAction\\searchAction.js",[],"D:\\mobx\\react-clone\\redux_test\\src\\movieComponents\\layout\\Spinner.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":25,"column":55,"nodeType":"67","messageId":"68","endLine":25,"endColumn":57},{"ruleId":"69","severity":1,"message":"70","line":17,"column":58,"nodeType":"71","messageId":"72","endLine":17,"endColumn":60},{"ruleId":"73","severity":1,"message":"74","line":35,"column":13,"nodeType":"75","messageId":"76","endLine":35,"endColumn":20},{"ruleId":"73","severity":1,"message":"77","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":31,"column":59,"nodeType":"71","messageId":"72","endLine":31,"endColumn":61},{"ruleId":"61","replacedBy":"78"},{"ruleId":"63","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'content' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]